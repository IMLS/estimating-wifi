- name: install session counter binary from github
  ansible.builtin.get_url:
    url: "{{ session_counter.binary_url }}"
    dest: "{{ session_counter.install_path }}/session-counter"
    owner: root
    group: root
    mode: 0755
  become: yes

- name: create a place for the config file.
  ansible.builtin.file:
    path: /opt/imls
    state: directory
  become: yes

- name: create a working directory (largely unneeded?)
  ansible.builtin.file:
    path: "{{ session_counter.workdir }}"
    state: directory
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: 0755
  become: no

- name: make sure the logdir (is this needed?) is set up
  ansible.builtin.file:
    path: "{{ session_counter.logdir }}"
    state: directory
    owner: root
    group: adm
    mode: 0755
  become: yes

# We will update the config file in the ansible repository
# when we want a new config to be used. This will have to update
# lockstep with a new binary.
- name: always update these files
  ansible.builtin.copy:
    src: "files{{session_counter.config_path}}/{{ item }}"
    dest: "{{session_counter.config_path}}/{{ item }}"
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    mode: '0644'
    force: yes
  loop:
    - config.yaml
    - manufacturers.sqlite
  become: yes

  # Setup the systemd unit
- name: template out the systemd unit
  ansible.builtin.template:
    src: files/lib/systemd/session-counter.service.j2
    dest: /etc/systemd/system/session-counter.service
    owner: root
    group: root
    mode: 0644
  become: yes

# Should we use commands, or the module?
- name: stop session-counter unit
  ansible.builtin.command:
    cmd: systemctl stop session-counter
  become: yes
- name: enable unit
  ansible.builtin.command:
    cmd: systemctl enable session-counter
  become: yes
- name: reload units
  ansible.builtin.command:
    cmd: systemctl daemon-reload
  become: yes
- name: start session-counter unit
  ansible.builtin.command:
    cmd: systemctl start session-counter
  become: yes
