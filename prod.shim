#!/usr/bin/env bash

set -euox pipefail

REPO_NAME="imls-pi-stack"
BRANCH="versioning" # main
GITHUB_REPO="cantsin/${REPO_NAME}"
VERSION=$(curl -s "https://raw.githubusercontent.com/${GITHUB_REPO}/${BRANCH}/prod-version.txt")
BINARY_URL="https://github.com/${GITHUB_REPO}/releases/download/${VERSION}"
# sometimes we have trouble overwriting.
sudo rm -rf /usr/local/bin/{wifi-hardware-search-cli,input-initial-configuration,session-counter,log-event}

# install binaries into /usr/local/bin.
for bin in "wifi-hardware-search-cli" "input-initial-configuration" "session-counter" "log-event"
do
    sudo curl -L -s "${BINARY_URL}/${bin}" -o "/usr/local/bin/${bin}"
    sudo chmod +x "/usr/local/bin/${bin}"
done

# copy over the config.
DEST="/opt/imls"
sudo mkdir -p "${DEST}"
sudo curl -s "https://raw.githubusercontent.com/${GITHUB_REPO}/${BRANCH}/config.init.yaml" -o "${DEST}/config.yaml"

# IF the VERSION directory exists, do nothing.
# That means we're not doing a new install.
VLESS_VERSION=$(echo "${VERSION}" | cut -b2-)  # remove leading v.
SOURCE_URL="https://github.com/${GITHUB_REPO}/archive/refs/tags/${VERSION}.tar.gz"
if [ -d "${DEST}/source/${VERSION}" ]
    # It exists. We shouldn't have to do anything.
    /usr/local/bin/log-event --tag "prod-skip" --info '{"version": "${VERSION}"}'
else 
    # [ -d "${DEST}/source/" ] && sudo rm -rf "${DEST}/source/"
    /usr/local/bin/log-event --tag "prod-unpack" --info '{"version": "${VERSION}"}'
    pushd "${DEST}"
        curl -L -s "${SOURCE_URL}" | sudo tar xz
        sudo mv "${REPO_NAME}-${VLESS_VERSION}/" source/${VERSION}
    popd
fi